{
  "avatar": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The alternative text used to describe the avatar, which is displayed as hover text on the image.",
        "name": "alternativeText",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the icon used as a fallback when the image fails to load. The initials fallback relies on this for its background color. Names are written in the format 'standard:account' where 'standard' is the category, and 'account' is the specific icon to be displayed. Only icons from the standard and custom categories are allowed.",
        "name": "fallbackIconName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "If the record name contains two words, like first and last name, use the first capitalized letter of each. For records that only have a single word name, use the first two letters of that word using one capital and one lower case letter.",
        "name": "initials",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The size of the avatar. Valid values are x-small, small, medium, and large. This value defaults to medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL for the image.",
        "name": "src",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the shape of the avatar. Valid values are empty, circle, and square. This value defaults to square.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A visual representation of an object.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "badge": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to be displayed inside the badge.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a label which holds a small amount of information, such as the number of unread notifications.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "breadcrumb": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL of the page that the breadcrumb goes to.",
        "name": "href",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text label for the breadcrumb.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The name for the breadcrumb component. This value is optional and can be used to identify the breadcrumb in a callback.",
        "name": "name",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the breadcrumb is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "An item in the hierarchy path of the page the user is on.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "breadcrumbs": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A hierarchy path of the page you're currently visiting within the website or app.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "button": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The Lightning Design System name of the icon. Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed.",
        "name": "iconName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Describes the position of the icon with respect to body. Options include left and right. This value defaults to left.",
        "name": "iconPosition",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to be displayed inside the button.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The name for the button element. This value is optional and can be used to identify the button in a callback.",
        "name": "name",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the button is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the type of button. Valid values are button, reset, and submit. This value defaults to button.",
        "name": "type",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the button element. This value is optional and can be used when submitting a form.",
        "name": "value",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the button. Accepted variants include base, neutral, brand, destructive, inverse and success. This value defaults to neutral.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a button element.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "button-icon": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The alternative text used to describe the icon. This text should describe what happens when you click the button, for example 'Upload File', not what the icon looks like, 'Paperclip'.",
        "name": "alternativeText",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The class to be applied to the contained icon element.",
        "name": "iconClass",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the icon. Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed. Only utility icons can be used in this component.",
        "name": "iconName",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The name for the button element. This value is optional and can be used to identify the button in a callback.",
        "name": "name",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action that will be run when the button is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The size of the buttonIcon. For the bare variant, options include x-small, small, medium, and large. For non-bare variants, options include xx-small, x-small, small, and medium. This value defaults to medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the type of button. Valid values are button, reset, and submit. This value defaults to button.",
        "name": "type",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the button element. This value is optional and can be used when submitting a form.",
        "name": "value",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of buttonIcon. Accepted variants include bare,\n        container, brand, border, border-filled, bare-inverse, and border-inverse. This value defaults to border.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "An icon-only HTML button.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "button-icon-stateful": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The alternative text used to describe the icon. This text should describe what happens when you click the button, for example 'Upload File', not what the icon looks like, 'Paperclip'.",
        "name": "alternativeText",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The Lightning Design System name of the icon. Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed. Note: Only utility icons can be used in this component.",
        "name": "iconName",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The name for the button element. This value is optional and can be used to identify the button in a callback.",
        "name": "name",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action that will be run when the button is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies whether button is in selected state or not",
        "name": "selected",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The size of the buttonIcon. Options include xx-small, x-small, small, and medium. This value defaults to medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the button element. This value is optional and can be used when submitting a form.",
        "name": "value",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of buttonIcon. Accepted variants include border, border-filled, and border-inverse. This value defaults to border.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "An icon-only button that retains state. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      }
    ],
    "support": "GA"
  },
  "button-stateful": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The name of the icon to be used in the format \\'utility:close\\' when the state is true and the button receives focus.",
        "name": "iconNameWhenHover",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The name of the icon to be used in the format \\'utility:add\\' when the state is false.",
        "name": "iconNameWhenOff",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The name of the icon to be used in the format \\'utility:check\\' when the state is true.",
        "name": "iconNameWhenOn",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to be displayed inside the button when state is true and the button receives focus.",
        "name": "labelWhenHover",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to be displayed inside the button when state is false.",
        "name": "labelWhenOff",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The text to be displayed inside the button when state is true.",
        "name": "labelWhenOn",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the button is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The state of the button, which shows whether the button has been selected or not. The default state is false.",
        "name": "state",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the button. Accepted variants include brand, destructive, inverse, neutral, success, and text. This value defaults to neutral.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A button that toggles between states.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "carousel": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the carousel should stop looping from the beginning after the last item is displayed. The default value is false.",
        "name": "disableAutoRefresh",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether auto scroll is disabled. The default value is false.",
        "name": "disableAutoScroll",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The auto scroll duration. The default is 5 seconds, after that the next image is displayed.",
        "name": "scrollDuration",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A collection of images that are displayed one at a time.",
    "extensible": false,
    "minVersion": "42.0",
    "support": "GA"
  },
  "checkbox-group": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Set to true if the checkbox group is disabled. Checkbox selections can't be changed for a disabled checkbox group. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Text label for the checkbox group.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Optional message displayed when no checkbox is selected and the required attribute is set to true.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The name of the checkbox group.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the checkbox group releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a checkbox value changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the checkbox group receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Array of label-value pairs for each checkbox.",
        "name": "options",
        "required": true,
        "type": "LIST"
      },
      {
        "description": "Set to true if at least one checkbox must be selected. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The list of selected checkboxes. Each array entry contains the value of a selected checkbox. The value of each checkbox is set in the options attribute.",
        "name": "value",
        "required": true,
        "type": "STRING[]"
      }
    ],
    "description": "A checkbox group that enables selection of single or multiple options. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "click-to-dial": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Comma-separated list of parameters to pass to the third-party phone system.",
        "name": "params",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Salesforce record Id that's associated with the phone number.",
        "name": "recordId",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The phone number.",
        "name": "value",
        "required": true,
        "type": "STRING"
      }
    ],
    "description": "Renders a formatted phone number as click-to-dial enabled or disabled for Open CTI and Voice. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "combobox": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input element should be disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Determines the alignment of the drop-down relative to the input. Available values are left, center, right, bottom-left, bottom-center, bottom-right. The default is left.",
        "name": "dropdownAlignment",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text label for the combobox.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is missing and input is required.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the name of an input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a value attribute changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "A list of options that are available for selection. Each option has the following attributes: class, selected, label, and value.",
        "name": "options",
        "required": true,
        "type": "OBJECT[]"
      },
      {
        "description": "Text that is displayed before an option is selected, to prompt the user to select an option. The default is \"Select an Option\".",
        "name": "placeholder",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies that an input field must be filled out before submitting the form. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Represents the validity states that an element can be in, with respect to constraint validation.",
        "name": "validity",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the value of an input element.",
        "name": "value",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The variant changes the appearance of an input field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A widget that provides an input field that is readonly, accompanied with a dropdown list of selectable options.",
    "extensible": false,
    "methods": [
      {
        "description": "Shows the help message if the form control is in an invalid state.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "datatable": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Array of the columns object that's used to define the data types. Required properties include 'label', 'dataKey', and 'type'. The default type is 'text'.",
        "name": "columns",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "The array of data to be displayed.",
        "name": "data",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the default sorting direction on an unsorted column. Valid options include 'asc' and 'desc'. The default is 'asc' for sorting in ascending order.",
        "name": "defaultSortDirection",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Enables or disables infinite loading. The default is false.",
        "name": "enableInfiniteLoading",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Hides or displays the checkbox column for row selection. To hide the checkbox column, set hideCheckboxColumn to true. The default is false.",
        "name": "hideCheckboxColumn",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether more data is being loaded and displays a spinner if so. The default is false.",
        "name": "isLoading",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Required for better performance. Associates each row with a unique ID.",
        "name": "keyField",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Determines when to trigger infinite loading based on how many pixels the table's scroll position is from the bottom of the table. The default is 20.",
        "name": "loadMoreOffset",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The maximum width for all columns. The default is 1000px.",
        "name": "maxColumnWidth",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The maximum number of rows that can be selected. Checkboxes are used for selection by default, and radio buttons are used when maxRowSelection is 1.",
        "name": "maxRowSelection",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The minimum width for all columns. The default is 50px.",
        "name": "minColumnWidth",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The action triggered when a header action is clicked. By default, it also closes the header actions menu.",
        "name": "onheaderaction",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when infinite loading loads more data.",
        "name": "onloadmore",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the table renders columns the first time and every time its resized an specific column.",
        "name": "onresize",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a row action is clicked. By default, it also closes the row actions menu.",
        "name": "onrowaction",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a row is selected.",
        "name": "onrowselection",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a column is sorted.",
        "name": "onsort",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies whether column resizing is disabled. The default is false.",
        "name": "resizeColumnDisabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The width to resize the column when user press left or right arrow. The default is 10px.",
        "name": "resizeStep",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Determines where to start counting the row number. The default is 0.",
        "name": "rowNumberOffset",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Enables programmatic row selection with a list of keyField values.",
        "name": "selectedRows",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Shows or hides the row number column. Set to true to show the row number column. The default is false.",
        "name": "showRowNumberColumn",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The column fieldName that controls the sorting order. Sort the data using the onsort event handler.",
        "name": "sortedBy",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the sorting direction. Sort the data using the onsort event handler. Valid options include 'asc' and 'desc'.",
        "name": "sortedDirection",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A table that displays columns of data, formatted according to type. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Returns an array of data in each selected row.",
        "name": "getSelectedRows"
      }
    ],
    "support": "GA"
  },
  "dual-listbox": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input element should be disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Label for the dual list box.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Maximum number of options required in the selected options list box.",
        "name": "max",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Minimum number of options required in the selected options list box.",
        "name": "min",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Specifies the name of an input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a value attribute changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "A list of options that are available for selection. Each option has the following attributes: label and value.",
        "name": "options",
        "required": true,
        "type": "OBJECT[]"
      },
      {
        "description": "Specifies that an input field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies that an input field must be filled out before submitting the form. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "A list of required options that cannot be removed from selected options list box. This list is populated with values from options attribute.",
        "name": "requiredOptions",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Label for selected options list box.",
        "name": "selectedLabel",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Label for source options list box.",
        "name": "sourceLabel",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Represents the validity states that an element can be in, with respect to constraint validation.",
        "name": "validity",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the value of an input element.",
        "name": "value",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "A list of default options that are included in the selected options list box. This list is populated with values from the options attribute.",
        "name": "values",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "The variant changes the appearance of an input field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A widget that provides an input listbox, accompanied with a listbox of selectable options. Order of selected options is saved. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      },
      {
        "description": "Shows the help message if the form control is in an invalid state.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "support": "GA"
  },
  "dynamic-icon": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The alternative text used to describe the dynamicIcon. This text should describe what’s happening. For example, 'Graph is refreshing', not what the icon looks like, 'Graph'.",
        "name": "alternativeText",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the icon is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The option attribute changes the appearance of the dynamicIcon. The options available depend on the type attribute.\n                For eq: play (default) or stop\n                For score: positive (default) or negative\n                For strength: -3, -2, -1, 0 (default), 1, 2, 3\n                For trend: neutral (default), up, or down",
        "name": "option",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the dynamicIcon. Valid values are: ellie, eq, score, strength, trend, and waffle.",
        "name": "type",
        "required": true,
        "type": "STRING"
      }
    ],
    "description": "Represents various animated icons with different states. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "file-upload": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Comma-separated list of file extensions that can be uploaded in the format .ext, such as .pdf, .jpg, or .png",
        "name": "accept",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether this component should be displayed in a disabled state. Disabled components can't be clicked. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The text label for the file uploader.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Specifies whether a user can upload more than one file simultanesouly. This value defaults to false.",
        "name": "multiple",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the name of the input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when files have finished uploading.",
        "name": "onuploadfinished",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The record Id of the record that the uploaded file is associated to.",
        "name": "recordId",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A file uploader for uploading and attaching files to records.",
    "extensible": false,
    "support": "BETA"
  },
  "formatted-url": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to display in the link.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the URL is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies where to open the link. Options include _blank, _parent, _self, and _top.",
        "name": "target",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text to display when the mouse hovers over the link.",
        "name": "tooltip",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL to be formatted.",
        "name": "value",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a URL as a hyperlink. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-address": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The city detail for the address.",
        "name": "city",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The country detail for the address.",
        "name": "country",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the address is clickable. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The latitude of the location if known. Latitude values must be within -90 and 90.",
        "name": "latitude",
        "required": false,
        "type": "DECIMAL"
      },
      {
        "description": "The longitude of the location if known. Longitude values must be within -180 and 180.",
        "name": "longitude",
        "required": false,
        "type": "DECIMAL"
      },
      {
        "description": "The postal code detail for the address.",
        "name": "postalCode",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The province detail for the address.",
        "name": "province",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The street detail for the address.",
        "name": "street",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a formatted address that provides a link to the given location on Google Maps. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-date-time": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are numeric or 2-digit.",
        "name": "day",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are narrow, short, or long.",
        "name": "era",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are numeric or 2-digit.",
        "name": "hour",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Determines whether time is displayed as 12-hour. If false, time displays as 24-hour. The default setting is determined by the user's locale.",
        "name": "hour12",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Allowed values are numeric or 2-digit.",
        "name": "minute",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are 2-digit, narrow, short, or long.",
        "name": "month",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are numeric or 2-digit.",
        "name": "second",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The time zone to use. Implementations can include any time zone listed in the IANA time zone database. The default is the runtime's default time zone. Use this attribute only if you want to override the default time zone.",
        "name": "timeZone",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are short or long. For example, the Pacific Time zone would display as 'PST' if you select 'short', or 'Pacific Standard Time' if you select 'long.'",
        "name": "timeZoneName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value to be formatted, which can be a Date object, timestamp, or an ISO8601 formatted string.",
        "name": "value",
        "required": true,
        "type": "OBJECT"
      },
      {
        "description": "Allowed values are narrow, short, or long.",
        "name": "weekday",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Allowed values are numeric or 2-digit.",
        "name": "year",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays formatted date and time.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "BETA"
  },
  "formatted-email": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The text label for the email.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the email is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The email address that's displayed if a label is not provided.",
        "name": "value",
        "required": true,
        "type": "STRING"
      }
    ],
    "description": "Displays an email as a hyperlink with the mailto: URL scheme. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-location": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The latitude value of the geolocation. Latitude values must be within -90 and 90.",
        "name": "latitude",
        "required": true,
        "type": "DECIMAL"
      },
      {
        "description": "The longitude value of the geolocation. Longitude values must be within -180 and 180.",
        "name": "longitude",
        "required": true,
        "type": "DECIMAL"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a geolocation in Decimal degrees (DD) using the format [latitude, longitude]. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-name": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the first name.",
        "name": "firstName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The format for which to display the name. Valid values include short, medium, and long. This value defaults to long.",
        "name": "format",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the informal name.",
        "name": "informalName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the last name.",
        "name": "lastName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the middle name.",
        "name": "middleName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the salutation, such as Dr. or Mrs.",
        "name": "salutation",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value for the suffix.",
        "name": "suffix",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a formatted name that can include a salutation and suffix. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-number": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Only used if style='currency', this attribute determines which currency is displayed. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar.",
        "name": "currencyCode",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Determines how currency is displayed. Possible values are symbol, code, and name. This value defaults to symbol.",
        "name": "currencyDisplayAs",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The maximum number of fraction digits that are allowed.",
        "name": "maximumFractionDigits",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The maximum number of significant digits that are allowed. Possible values are from 1 to 21.",
        "name": "maximumSignificantDigits",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The minimum number of fraction digits that are required.",
        "name": "minimumFractionDigits",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The minimum number of integer digits that are required. Possible values are from 1 to 21.",
        "name": "minimumIntegerDigits",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The minimum number of significant digits that are required. Possible values are from 1 to 21.",
        "name": "minimumSignificantDigits",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The number formatting style to use. Possible values are decimal, currency, and percent. This value defaults to decimal.",
        "name": "style",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The value to be formatted.",
        "name": "value",
        "required": true,
        "type": "DECIMAL"
      }
    ],
    "description": "Displays formatted numbers for decimals, currency, and percentages.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "BETA"
  },
  "formatted-phone": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the phone number is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Sets the phone number to display.",
        "name": "value",
        "required": false,
        "type": "INTEGER"
      }
    ],
    "description": "Displays a phone number as a hyperlink with the tel: URL scheme. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-rich-text": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Sets the rich text to display.",
        "name": "value",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays rich text that's formatted with whitelisted tags and attributes. Other tags and attributes are removed and only their text content is displayed. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-text": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the text should be converted to a link. If set to true, URLs and email addresses are displayed in anchor tags.",
        "name": "linkify",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text to output.",
        "name": "value",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays text, replaces newlines with line breaks, and linkifies if requested. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "formatted-time": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The time value to format.",
        "name": "value",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a formatted time in user's locale format. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "helptext": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text to be shown in the popover.",
        "name": "content",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the icon used as the visible element. Names are written in the format 'utility:info' where 'utility' is the category, and 'info' is the specific icon to be displayed. The default value is 'utility:info'.",
        "name": "iconName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "An icon with a text popover.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "icon": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The alternative text used to describe the icon. This text should describe what happens when you click the button, for example 'Upload File', not what the icon looks like, 'Paperclip'.",
        "name": "alternativeText",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the icon. Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed.",
        "name": "iconName",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The size of the icon. Options include xx-small, x-small, small, medium, or large. This value defaults to medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of a utility icon. Accepted variants include inverse, warning, and error. Use the inverse variant to implement a white fill in utility icons on dark backgrounds.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a visual element that provides context and enhances usability.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "input": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies the types of files that the server accepts. This attribute can be used only when type='file'.",
        "name": "accept",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the checkbox is checked. This value defaults to false.",
        "name": "checked",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input element should be disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "A FileList that contains selected files. This attribute can be used only when type='file'.",
        "name": "files",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "String value with the formatter to be used. Valid values include percent, percent-fixed, and currency.",
        "name": "formatter",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the spinner is displayed to indicate that data is loading. This value defaults to false.",
        "name": "isLoading",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Text label for the input.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Expected higher bound for the value in Floating-Point number",
        "name": "max",
        "required": false,
        "type": "DECIMAL"
      },
      {
        "description": "The maximum number of characters allowed in the field.",
        "name": "maxlength",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Text shown for the active state of a toggle. The default is \"Active\".",
        "name": "messageToggleActive",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text shown for then inactive state of a toggle. The default is \"Inactive\".",
        "name": "messageToggleInactive",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a bad input is detected.",
        "name": "messageWhenBadInput",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a pattern mismatch is detected.",
        "name": "messageWhenPatternMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a range overflow is detected.",
        "name": "messageWhenRangeOverflow",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a range underflow is detected.",
        "name": "messageWhenRangeUnderflow",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a step mismatch is detected.",
        "name": "messageWhenStepMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is too long.",
        "name": "messageWhenTooLong",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a type mismatch is detected.",
        "name": "messageWhenTypeMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is missing.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Expected lower bound for the value in Floating-Point number",
        "name": "min",
        "required": false,
        "type": "DECIMAL"
      },
      {
        "description": "The minimum number of characters allowed in the field.",
        "name": "minlength",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Specifies that a user can enter more than one value. This attribute can be used only when type='file' or type='email'.",
        "name": "multiple",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the name of an input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a value attribute changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies the regular expression that the input's value is checked against.\n                                This attribute is supported for text, date, search, url, tel, email, and password types.",
        "name": "pattern",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text that is displayed when the field is empty, to prompt the user for a valid entry.",
        "name": "placeholder",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies that an input field must be filled out before submitting the form. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Granularity of the value in Positive Floating Point. Use 'any' when granularity is not a concern. This value defaults to 1.",
        "name": "step",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The type of the input. This value defaults to text.",
        "name": "type",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Represents the validity states that an element can be in, with respect to constraint validation.",
        "name": "validity",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the value of an input element.",
        "name": "value",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The variant changes the appearance of an input field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents interactive controls that accept user input depending on the type attribute.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      },
      {
        "description": "Shows the help message if the form control is in an invalid state.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "support": "BETA"
  },
  "input-address": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The label of the address compound field.",
        "name": "addressLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The city field of the address.",
        "name": "city",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The label of the city field of the address.",
        "name": "cityLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The country field of the address. If countryOptions is provided, this country value is selected by default.",
        "name": "country",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The label of the country field of the address.",
        "name": "countryLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The array of label-value pairs for the country. Displays a dropdown menu of options.",
        "name": "countryOptions",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Specifies whether the address fields are disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The action triggered when the input releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the value changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the input receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The postal code field of the address.",
        "name": "postalCode",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The label of the postal code field of the address.",
        "name": "postalCodeLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The province field of the address. If provinceOptions is provided, this province value is selected by default.",
        "name": "province",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The label of the province field of the address.",
        "name": "provinceLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The array of label-value pairs for the province. Displays a dropdown menu of options.",
        "name": "provinceOptions",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Specifies whether the address fields are read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether the address fields are required. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The street field of the address.",
        "name": "street",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The label of the street field of the address.",
        "name": "streetLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the compound field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents an address compound field. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "input-field": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The API name of the field to be displayed.",
        "name": "fieldName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The field value, which overrides the existing value.",
        "name": "value",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents an editable input for a field on a Salesforce object. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "input-location": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the compound field should be disabled. Disabled fields are grayed out and not clickable. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Text label for the compound field.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The latitude value. Latitude values must be within -90 and 90.",
        "name": "latitude",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The longitude value. Longitude values must be within -180 and 180.",
        "name": "longitude",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the input releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the value changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the input receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies whether the compound field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether the compound field must be filled out. An error message is displayed if a user interacts with the field and does not provide a value. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the compound field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a geolocation compound field that accepts a latitude and longitude value. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "input-name": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the compound field should be disabled. Disabled fields are grayed out and not clickable. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "List of fields to be displayed on the component. This value defaults to ['firstName', 'salutation', 'lastName']. Other field values include middleName, informalName, suffix.",
        "name": "fieldsToDisplay",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Displays the First Name field.",
        "name": "firstName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays the Informal Name field.",
        "name": "informalName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Text label for the compound field.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays the Last Name field. This field is always displayed if you set required to true.",
        "name": "lastName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays the Middle Name field.",
        "name": "middleName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the input releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the value changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the input receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Displays a list of salutation options, such as Dr. or Mrs., provided as label-value pairs.",
        "name": "options",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Specifies whether the compound field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether the compound field must be filled out. A red asterisk is displayed on the Last Name field. An error message is displayed if a user interacts with the Last Name field and does not provide a value. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays the Salutation field as a dropdown menu. An array of label-value pairs must be provided using the options attribute.",
        "name": "salutation",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays the Suffix field.",
        "name": "suffix",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the compound field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a name compound field. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "input-rich-text": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A space-separated list of element IDs that provides descriptive labels for the rich text editor.",
        "name": "ariaDescribedby",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Label describing the rich text editor to assistive technologies",
        "name": "ariaLabel",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "An element ID that provides a label for the rich text editor.",
        "name": "ariaLabelledby",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the editor is disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "A comma-separated list of button categories to remove from the toolbar.",
        "name": "disabledCategories",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Error message that's displayed when valid is false.",
        "name": "messageWhenBadInput",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Text that is displayed when the field is empty.",
        "name": "placeholder",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the editor content is valid. If invalid, the slds-has-error class is added. This value defaults to true.",
        "name": "valid",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The HTML content in the rich text editor.",
        "name": "value",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the toolbar. Accepted variants include bottom-toolbar.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A WYSIWYG editor with a customizable toolbar for entering rich text",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "notifications-library": {
    "@type": "COMPONENT",
    "description": "Displays messages via notices and toasts. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "attributes": [
          {
            "description": "Parameters to customize your notice with values for variant, header, message, and closeCallback.",
            "name": "noticeParams",
            "required": true,
            "type": "OBJECT"
          }
        ],
        "description": "Displays a notice with a message.",
        "name": "showNotice"
      },
      {
        "attributes": [
          {
            "description": "Parameters to customize your toast with values for variant, title, message, messageData, and mode.",
            "name": "toastParams",
            "required": true,
            "type": "OBJECT"
          }
        ],
        "description": "Displays a toast with a message.",
        "name": "showToast"
      }
    ],
    "minVersion": "41.0",
    "support": "GA"
  },
  "output-field": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The API name of the field to be displayed.",
        "name": "fieldName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Changes the appearance of the output. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a read-only display of a label, help text, and value for a field on a Salesforce object. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "overlay-library": {
    "@type": "COMPONENT",
    "description": "Displays messages via modals and popovers. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Dismisses and destroys the modal or popover.",
        "name": "close"
      },
      {
        "description": "Hides the modal or popover from view.",
        "name": "hide"
      },
      {
        "description": "Displays the modal or popover.",
        "name": "show"
      },
      {
        "attributes": [
          {
            "description": "Parameters to customize your modal with values for header, body, footer, showCloseButton, cssClass, and closeCallback.",
            "name": "modalParams",
            "required": true,
            "type": "OBJECT"
          }
        ],
        "description": "Displays a modal with a message.",
        "name": "showCustomModal"
      },
      {
        "attributes": [
          {
            "description": "Parameters to customize your popover with values for body, referenceSelector, and cssClass.",
            "name": "popoverParams",
            "required": true,
            "type": "OBJECT"
          }
        ],
        "description": "Displays a popover with a message.",
        "name": "showCustomPopover"
      }
    ],
    "minVersion": "41.0",
    "support": "GA"
  },
  "pill": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies whether the pill has errors. The default is false.",
        "name": "hasError",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The URL of the page that the link goes to.",
        "name": "href",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text label that displays in the pill.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The icon or figure that's displayed next to the textual information.",
        "name": "media",
        "required": false,
        "type": "AURA.COMPONENT[]"
      },
      {
        "description": "The name for the pill. This value is optional and can be used to identify the pill in a callback.",
        "name": "name",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the button is clicked.",
        "name": "onclick",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the pill is removed.",
        "name": "onremove",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A pill represents an existing item in a database, as opposed to user-generated freeform text.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "pill-container": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "An array of items to be rendered as pills in a container.",
        "name": "items",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Aria label for the pill container.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when a pill is removed.",
        "name": "onitemremove",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Whether keep pills in single line.",
        "name": "singleLine",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A list of pills grouped in a container. This component requires API version 42.0 and later. ",
    "extensible": false,
    "minVersion": "42.0",
    "support": "GA"
  },
  "progress-bar": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The size of the progress bar. Valid values are x-small, small, medium, and large. The default value is medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The percentage value of the progress bar.",
        "name": "value",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The variant of the progress bar. Valid values are base and circular.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a horizontal progress bar from left to right to indicate the progress of an operation. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "radio-group": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input element should be disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Text label for the radio group.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Optional message displayed when no radio button is selected and the required attribute is set to true.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies the name of an input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a value attribute changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Array of label-value pairs for each radio button.",
        "name": "options",
        "required": true,
        "type": "LIST"
      },
      {
        "description": "Specifies that an input field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies that an input field must be filled out before submitting the form. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The style of the radio group. Options are radio or button. The default is radio.",
        "name": "type",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Represents the validity states that an element can be in, with respect to constraint validation.",
        "name": "validity",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "Specifies the value of an input element.",
        "name": "value",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The variant changes the appearance of an input field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A radio button group that can have a single option selected. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Sets focus on the element.",
        "name": "focus"
      },
      {
        "description": "Shows the help message if the form control is in an invalid state.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "support": "GA"
  },
  "record-view-form": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The API name of the object.",
        "name": "objectApiName",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The ID of the record to be displayed.",
        "name": "recordId",
        "required": true,
        "type": "STRING"
      }
    ],
    "description": "Represents a record view that displays one or more fields, provided by lightning:outputField. This component requires API version 41.0 and later.",
    "extensible": false,
    "minVersion": "41.0",
    "support": "GA"
  },
  "relative-date-time": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The timestamp or JavaScript Date object to be formatted.",
        "name": "value",
        "required": true,
        "type": "OBJECT"
      }
    ],
    "description": "Displays the relative time difference between the source date-time and the provided date-time.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "BETA"
  },
  "slider": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The disabled value of the input range. This value default to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "The text label for the input range. Provide your own label to describe the slider. Otherwise, no label is displayed.",
        "name": "label",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The max value of the input range. This value defaults to 100.",
        "name": "max",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Error message to be displayed when a bad input is detected. Use with setCustomValidity.",
        "name": "messageWhenBadInput",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a pattern mismatch is detected. Use with setCustomValidity.",
        "name": "messageWhenPatternMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a range overflow is detected. Use with setCustomValidity.",
        "name": "messageWhenRangeOverflow",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a range underflow is detected. Use with setCustomValidity.",
        "name": "messageWhenRangeUnderflow",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a step mismatch is detected. Use with setCustomValidity.",
        "name": "messageWhenStepMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is too long. Use with setCustomValidity.",
        "name": "messageWhenTooLong",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when a type mismatch is detected. Use with setCustomValidity.",
        "name": "messageWhenTypeMismatch",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is missing. Use with setCustomValidity.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The min value of the input range. This value defaults to 0.",
        "name": "min",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The action triggered when the slider releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the slider value changes. You must pass any newly selected value back to the slider component to bind the new value to the slider.",
        "name": "onchange",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the slider receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The size value of the input range. This value default to empty, which is the base. Supports x-small, small, medium, and large.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The step increment value of the input range. Example steps include 0.1, 1, or 10. This value defaults to 1.",
        "name": "step",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The type of the input range position. This value defaults to horizontal.",
        "name": "type",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The numerical value of the input range. This value defaults to 0.",
        "name": "value",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The variant changes the appearance of the slider. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "An input range slider for specifying a value between two specified numbers. This component requires API version 41.0 and later.",
    "extensible": false,
    "methods": [
      {
        "description": "Removes keyboard focus on the input element.",
        "name": "blur"
      },
      {
        "description": "Returns the valid property value (Boolean) on the ValidityState object to indicate whether the input field value has any validity errors.",
        "name": "checkValidity"
      },
      {
        "description": "Sets focus on the input element.",
        "name": "focus"
      },
      {
        "attributes": [
          {
            "description": "The string that describes the error. If message is an empty string, the error message is reset.",
            "name": "message",
            "required": false,
            "type": "STRING"
          }
        ],
        "description": "Sets a custom error message to be displayed when the slider value is submitted.",
        "name": "setCustomValidity"
      },
      {
        "description": "Displays error messages on the slider. The slider value is invalid if it fails at least one constraint validation and returns false when checkValidity() is called.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "support": "GA"
  },
  "spinner": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "The alternative text used to describe the reason for the wait and need for a spinner.",
        "name": "alternativeText",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The size of the spinner. Accepted sizes are small, medium, and large. This value defaults to medium.",
        "name": "size",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of the spinner. Accepted variants are base, brand, and inverse. This value defaults to base.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays an animated spinner.",
    "extensible": false,
    "minVersion": "0.0",
    "support": "GA"
  },
  "textarea": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Specifies a shortcut key to activate or focus an element.",
        "name": "accesskey",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input element should be disabled. This value defaults to false.",
        "name": "disabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Text that describes the desired textarea input.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The maximum number of characters allowed in the textarea.",
        "name": "maxlength",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Error message to be displayed when a bad input is detected.",
        "name": "messageWhenBadInput",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is too long.",
        "name": "messageWhenTooLong",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Error message to be displayed when the value is missing.",
        "name": "messageWhenValueMissing",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The minimum number of characters allowed in the textarea.",
        "name": "minlength",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Specifies the name of an input element.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The action triggered when the element releases focus.",
        "name": "onblur",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a value attribute changes.",
        "name": "onchange",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when the element receives focus.",
        "name": "onfocus",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Text that is displayed when the field is empty, to prompt the user for a valid entry.",
        "name": "placeholder",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Specifies that an input field is read-only. This value defaults to false.",
        "name": "readonly",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies that an input field must be filled out before submitting the form. This value defaults to false.",
        "name": "required",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies the tab order of an element (when the tab button is used for navigating).",
        "name": "tabindex",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Represents the validity states that an element can be in, with respect to constraint validation.",
        "name": "validity",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The value of the textarea, also used as the default value during init.",
        "name": "value",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The variant changes the appearance of an input field. Accepted variants include standard and label-hidden. This value defaults to standard.",
        "name": "variant",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Represents a multiline text input.",
    "extensible": false,
    "methods": [
      {
        "description": "Shows the help message if the form control is in an invalid state.",
        "name": "showHelpMessageIfInvalid"
      }
    ],
    "minVersion": "0.0",
    "support": "GA"
  },
  "tree": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text that's displayed as the tree heading.",
        "name": "header",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "An array of key-value pairs that describe the tree. Keys include label, name, disabled, expanded, and items.",
        "name": "items",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The action triggered when a tree item is selected.",
        "name": "onselect",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a nested tree. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "tree-grid": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "Array of the columns object that's used to define the data types. Required properties include 'label', 'dataKey', and 'type'. The default type is 'text'.",
        "name": "columns",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "The array of data to be displayed.",
        "name": "data",
        "required": false,
        "type": "OBJECT"
      },
      {
        "description": "The array of unique row IDs that are expanded.",
        "name": "expandedRows",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Hides or displays the checkbox column for row selection. To hide the checkbox column, set hideCheckboxColumn to true. The default is false.",
        "name": "hideCheckboxColumn",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Specifies whether more data is being loaded and displays a spinner if so. The default is false.",
        "name": "isLoading",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Required for better performance. Associates each row with a unique ID.",
        "name": "keyField",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "The maximum width for all columns. The default is 1000px.",
        "name": "maxColumnWidth",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The minimum width for all columns. The default is 50px.",
        "name": "minColumnWidth",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The action triggered when the table renders columns the first time and every time its resized an specific column.",
        "name": "onresize",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when an operation its clicked. By default its to closes the actions menu.",
        "name": "onrowaction",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a row is selected.",
        "name": "onrowselection",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when a row is toggled (expanded or collapsed).",
        "name": "ontoggle",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "The action triggered when all rows are toggled (expanded or collapsed).",
        "name": "ontoggleall",
        "required": false,
        "type": "AURA.ACTION"
      },
      {
        "description": "Specifies whether column resizing is disabled. The default is false.",
        "name": "resizeColumnDisabled",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Determines where to start counting the row number. The default is 0.",
        "name": "rowNumberOffset",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "The array of unique row IDs that are selected.",
        "name": "selectedRows",
        "required": false,
        "type": "LIST"
      },
      {
        "description": "Hides or displays the row number column. To show the row number column, set showRowNumberColumn to true. The default is false.",
        "name": "showRowNumberColumn",
        "required": false,
        "type": "BOOLEAN"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "Displays a hierarchical view of data in a table. This component requires API version 42.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "vertical-navigation-item": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL of the page that the navigation item goes to.",
        "name": "href",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text displayed for the navigation item.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A unique identifier for the navigation item.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A text-only link within lightning:verticalNavigationSection or lightning:verticalNavigationOverflow. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "vertical-navigation-item-badge": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "Assistive text describing the number in the badge. This is used to enhance accessibility and is not displayed to the user.",
        "name": "assistiveText",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The number to show inside the badge. If this value is zero the badge will be hidden.",
        "name": "badgeCount",
        "required": false,
        "type": "INTEGER"
      },
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL of the page that the navigation item goes to.",
        "name": "href",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text displayed for this navigation item.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A unique identifier for this navigation item.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A link and badge within a lightning:verticalNavigationSection or lightning:verticalNavigationOverflow. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  },
  "vertical-navigation-item-icon": {
    "@type": "COMPONENT",
    "attributes": [
      {
        "description": "A CSS class for the outer element, in addition to the component's base classes.",
        "name": "class",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The URL of the page that the navigation item goes to.",
        "name": "href",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The Lightning Design System name of the icon. Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed.",
        "name": "iconName",
        "required": false,
        "type": "STRING"
      },
      {
        "description": "The text displayed for this navigation item.",
        "name": "label",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "A unique identifier for this navigation item.",
        "name": "name",
        "required": true,
        "type": "STRING"
      },
      {
        "description": "Displays tooltip text when the mouse moves over the element.",
        "name": "title",
        "required": false,
        "type": "STRING"
      }
    ],
    "description": "A link and icon within a lightning:verticalNavigationSection or lightning:verticalNavigationOverflow. This component requires API version 41.0 and later.",
    "extensible": false,
    "support": "GA"
  }
}
